{"ast":null,"code":"const initialState = {\n  showAlertMessage: false,\n  alertMessage: \"\",\n  showResultMessage: false,\n  resultMessageSize: \"\",\n  resultMessageOrientation: \"\",\n  selectedFiles: 0,\n  progressBar: [],\n  imagesList: [],\n  selectedImages: []\n}; //metodo que valida los actions para ejecutar la acción\n// correspondiente según la interaccion del usuario con la página\n\nconst uploadImage = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SELECCCIONAR_ARCHIVOS':\n      console.log(\"SELECCCIONAR_ARCHIVOS \");\n      console.log(action.files);\n      return {\n        selectedImages: [{\n          name: \"casa\"\n        }]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default uploadImage;","map":{"version":3,"sources":["C:/Datos/Diana/node-projects/images-upload-resizer-redux/src/reducers/upload.js"],"names":["initialState","showAlertMessage","alertMessage","showResultMessage","resultMessageSize","resultMessageOrientation","selectedFiles","progressBar","imagesList","selectedImages","uploadImage","state","action","type","console","log","files","name"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,gBAAgB,EAAE,KADD;AAEjBC,EAAAA,YAAY,EAAE,EAFG;AAGjBC,EAAAA,iBAAiB,EAAE,KAHF;AAIjBC,EAAAA,iBAAiB,EAAE,EAJF;AAKjBC,EAAAA,wBAAwB,EAAE,EALT;AAMjBC,EAAAA,aAAa,EAAE,CANE;AAOjBC,EAAAA,WAAW,EAAE,EAPI;AAQjBC,EAAAA,UAAU,EAAE,EARK;AASjBC,EAAAA,cAAc,EAAE;AATC,CAArB,C,CAcA;AACA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGX,YAAT,EAAuBY,MAAvB,KAAkC;AAElD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,uBAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACRD,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,KAAnB;AACM,aAAO;AACLP,QAAAA,cAAc,EAAE,CAAC;AAACQ,UAAAA,IAAI,EAAC;AAAN,SAAD;AADX,OAAP;;AAGF;AACI,aAAON,KAAP;AARR;AAUH,CAZD;;AAcA,eAAeD,WAAf","sourcesContent":["const initialState = {\r\n    showAlertMessage: false,\r\n    alertMessage: \"\",\r\n    showResultMessage: false,\r\n    resultMessageSize: \"\",\r\n    resultMessageOrientation: \"\",\r\n    selectedFiles: 0,\r\n    progressBar: [],\r\n    imagesList: [],\r\n    selectedImages: []\r\n}\r\n\r\n\r\n\r\n//metodo que valida los actions para ejecutar la acción\r\n// correspondiente según la interaccion del usuario con la página\r\nconst uploadImage = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'SELECCCIONAR_ARCHIVOS':\r\n            console.log(\"SELECCCIONAR_ARCHIVOS \")\r\n    console.log(action.files)\r\n          return {\r\n            selectedImages: [{name:\"casa\"}]\r\n          }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default uploadImage;"]},"metadata":{},"sourceType":"module"}