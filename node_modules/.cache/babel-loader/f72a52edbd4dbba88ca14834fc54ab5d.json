{"ast":null,"code":"var _jsxFileName = \"C:\\\\Datos\\\\Diana\\\\node-projects\\\\images-upload-resizer-redux\\\\src\\\\components\\\\ProgressBar.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux'; //import {upload} from \"../actions/upload\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProgressBarFiles = ({\n  progressBar\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: progressBar && progressBar.map((progressInfo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: progressInfo.fileName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar progress-bar-info\",\n        role: \"progressbar\",\n        \"aria-valuenow\": progressInfo.percentage,\n        \"aria-valuemin\": \"0\",\n        \"aria-valuemax\": \"100\",\n        style: {\n          width: progressInfo.percentage + \"%\"\n        },\n        children: [progressInfo.percentage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 5\n}, this);\n\n_c = ProgressBarFiles;\n\nconst mapStateToProps = state => {\n  return {\n    progressBar: state.uploadImage.progressBar\n  };\n};\n\nconst ProgressBar = connect(mapStateToProps)(ProgressBarFiles);\nexport default ProgressBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressBarFiles\");","map":{"version":3,"sources":["C:/Datos/Diana/node-projects/images-upload-resizer-redux/src/components/ProgressBar.js"],"names":["React","connect","ProgressBarFiles","progressBar","map","progressInfo","index","fileName","percentage","width","mapStateToProps","state","uploadImage","ProgressBar"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACrB;AAAA,YACKA,WAAW,IAAIA,WAAW,CAACC,GAAZ,CAAgB,CAACC,YAAD,EAAeC,KAAf,kBAChC;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACA;AAAA,gBAAOD,YAAY,CAACE;AAApB;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI;AACA,QAAA,SAAS,EAAC,gCADV;AAEA,QAAA,IAAI,EAAC,aAFL;AAGA,yBAAeF,YAAY,CAACG,UAH5B;AAIA,yBAAc,GAJd;AAKA,yBAAc,KALd;AAMA,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAEJ,YAAY,CAACG,UAAb,GAA0B;AAAnC,SANP;AAAA,mBAQCH,YAAY,CAACG,UARd;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,KAA2BF,KAA3B;AAAA;AAAA;AAAA;AAAA,UADgB;AADpB;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAMJ,gB;;AAuBN,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHR,IAAAA,WAAW,EAAGQ,KAAK,CAACC,WAAN,CAAkBT;AAD7B,GAAP;AAGH,CAJD;;AAMA,MAAMU,WAAW,GAAGZ,OAAO,CACvBS,eADuB,CAAP,CAElBR,gBAFkB,CAApB;AAIE,eAAeW,WAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from 'react-redux'\r\n//import {upload} from \"../actions/upload\"\r\n\r\nconst ProgressBarFiles = ({ progressBar }) => (\r\n    <div>\r\n       {(progressBar && progressBar.map((progressInfo, index) => (\r\n        <div className=\"mb-2\" key={index}>\r\n        <span>{progressInfo.fileName}</span>\r\n        <div className=\"progress\">\r\n            <div\r\n            className=\"progress-bar progress-bar-info\"\r\n            role=\"progressbar\"\r\n            aria-valuenow={progressInfo.percentage}\r\n            aria-valuemin=\"0\"\r\n            aria-valuemax=\"100\"\r\n            style={{ width: progressInfo.percentage + \"%\" }}\r\n            >\r\n            {progressInfo.percentage}%\r\n            </div>\r\n        </div>\r\n        </div>\r\n        )))}\r\n        \r\n    </div>\r\n  )\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        progressBar : state.uploadImage.progressBar\r\n    }\r\n}\r\n  \r\nconst ProgressBar = connect(\r\n    mapStateToProps\r\n)(ProgressBarFiles)\r\n  \r\n  export default ProgressBar;"]},"metadata":{},"sourceType":"module"}