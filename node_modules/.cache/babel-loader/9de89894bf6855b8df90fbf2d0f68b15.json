{"ast":null,"code":"const initialState = {\n  showAlertMessage: false,\n  alertMessage: \"\",\n  showResultMessage: false,\n  resultMessageSize: \"\",\n  resultMessageOrientation: \"\",\n  selectedFiles: 0,\n  progressBar: [],\n  imagesList: [],\n  selectedImages: []\n}; //metodo que valida los actions para ejecutar la acción\n// correspondiente según la interaccion del usuario con la página\n\nconst uploadImage = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SELECCCIONAR_ARCHIVOS':\n      let selectedFiles = action.files;\n      let files = [];\n\n      for (let selectedFile of selectedFiles) {\n        files.push({\n          name: selectedFile.name,\n          type: selectedFile.type\n        });\n      }\n\n      return { ...state,\n        selectedImages: files\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default uploadImage;","map":{"version":3,"sources":["C:/Datos/Diana/node-projects/images-upload-resizer-redux/src/reducers/upload.js"],"names":["initialState","showAlertMessage","alertMessage","showResultMessage","resultMessageSize","resultMessageOrientation","selectedFiles","progressBar","imagesList","selectedImages","uploadImage","state","action","type","files","selectedFile","push","name"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,gBAAgB,EAAE,KADD;AAEjBC,EAAAA,YAAY,EAAE,EAFG;AAGjBC,EAAAA,iBAAiB,EAAE,KAHF;AAIjBC,EAAAA,iBAAiB,EAAE,EAJF;AAKjBC,EAAAA,wBAAwB,EAAE,EALT;AAMjBC,EAAAA,aAAa,EAAE,CANE;AAOjBC,EAAAA,WAAW,EAAE,EAPI;AAQjBC,EAAAA,UAAU,EAAE,EARK;AASjBC,EAAAA,cAAc,EAAE;AATC,CAArB,C,CAYA;AACA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGX,YAAT,EAAuBY,MAAvB,KAAkC;AAElD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,uBAAL;AAEI,UAAIP,aAAa,GAAGM,MAAM,CAACE,KAA3B;AACA,UAAIA,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAIC,YAAT,IAAyBT,aAAzB,EAAwC;AACpCQ,QAAAA,KAAK,CAACE,IAAN,CAAW;AAAEC,UAAAA,IAAI,EAAEF,YAAY,CAACE,IAArB;AAA4BJ,UAAAA,IAAI,EAAGE,YAAY,CAACF;AAAhD,SAAX;AACH;;AAED,aAAO,EACP,GAAGF,KADI;AAEPF,QAAAA,cAAc,EAAEK;AAFT,OAAP;;AAKJ;AACI,aAAOH,KAAP;AAfR;AAiBH,CAnBD;;AAqBA,eAAeD,WAAf","sourcesContent":["const initialState = {\r\n    showAlertMessage: false,\r\n    alertMessage: \"\",\r\n    showResultMessage: false,\r\n    resultMessageSize: \"\",\r\n    resultMessageOrientation: \"\",\r\n    selectedFiles: 0,\r\n    progressBar: [],\r\n    imagesList: [],\r\n    selectedImages: []\r\n}\r\n\r\n//metodo que valida los actions para ejecutar la acción\r\n// correspondiente según la interaccion del usuario con la página\r\nconst uploadImage = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'SELECCCIONAR_ARCHIVOS':\r\n\r\n            let selectedFiles = action.files;\r\n            let files = []\r\n            for (let selectedFile of selectedFiles) {\r\n                files.push({ name: selectedFile.name , type : selectedFile.type});\r\n            }\r\n           \r\n            return {\r\n            ...state,\r\n            selectedImages: files\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default uploadImage;"]},"metadata":{},"sourceType":"module"}