{"ast":null,"code":"var _jsxFileName = \"C:\\\\Datos\\\\Diana\\\\node-projects\\\\images-upload-resizer-redux\\\\src\\\\components\\\\ProgressBar.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { upload } from \"../actions/upload\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProgressBarFiles extends React.Component {\n  constructor(props) {\n    super(props); //seteamos el estado inicial \n\n    this.state = {\n      showAlertMessage: false,\n      alertMessage: \"\",\n      showResultMessage: false,\n      resultMessageSize: \"\",\n      resultMessageOrientation: \"\",\n      selectedFiles: 0,\n      progressBar: [],\n      imagesList: [],\n      selectedImages: []\n    };\n  }\n\n  render() {\n    return this.state.progressBar && this.state.progressBar.map((progressInfo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: progressInfo.fileName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar progress-bar-info\",\n          role: \"progressbar\",\n          \"aria-valuenow\": progressInfo.percentage,\n          \"aria-valuemin\": \"0\",\n          \"aria-valuemax\": \"100\",\n          style: {\n            width: progressInfo.percentage + \"%\"\n          },\n          children: [progressInfo.percentage, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    progressBar: state.progressBar\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTodoClick: id => {\n      dispatch(upload(id));\n    }\n  };\n};\n\nconst ProgressBar = connect(mapStateToProps, mapDispatchToProps)(ProgressBarFiles);\nexport default ProgressBar;","map":{"version":3,"sources":["C:/Datos/Diana/node-projects/images-upload-resizer-redux/src/components/ProgressBar.js"],"names":["React","connect","upload","ProgressBarFiles","Component","constructor","props","state","showAlertMessage","alertMessage","showResultMessage","resultMessageSize","resultMessageOrientation","selectedFiles","progressBar","imagesList","selectedImages","render","map","progressInfo","index","fileName","percentage","width","mapStateToProps","mapDispatchToProps","dispatch","onTodoClick","id","ProgressBar"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,MAAR,QAAqB,mBAArB;;;AAEA,MAAMC,gBAAN,SAA+BH,KAAK,CAACI,SAArC,CAA+C;AAE3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAGf;;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,gBAAgB,EAAE,KADT;AAETC,MAAAA,YAAY,EAAE,EAFL;AAGTC,MAAAA,iBAAiB,EAAE,KAHV;AAITC,MAAAA,iBAAiB,EAAE,EAJV;AAKTC,MAAAA,wBAAwB,EAAE,EALjB;AAMTC,MAAAA,aAAa,EAAE,CANN;AAOTC,MAAAA,WAAW,EAAE,EAPJ;AAQTC,MAAAA,UAAU,EAAE,EARH;AASTC,MAAAA,cAAc,EAAE;AATP,KAAb;AAWH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WAEK,KAAKV,KAAL,CAAWO,WAAX,IAA0B,KAAKP,KAAL,CAAWO,WAAX,CAAuBI,GAAvB,CAA2B,CAACC,YAAD,EAAeC,KAAf,kBAClD;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACA;AAAA,kBAAOD,YAAY,CAACE;AAApB;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI;AACA,UAAA,SAAS,EAAC,gCADV;AAEA,UAAA,IAAI,EAAC,aAFL;AAGA,2BAAeF,YAAY,CAACG,UAH5B;AAIA,2BAAc,GAJd;AAKA,2BAAc,KALd;AAMA,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAEJ,YAAY,CAACG,UAAb,GAA0B;AAAnC,WANP;AAAA,qBAQCH,YAAY,CAACG,UARd;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,OAA2BF,KAA3B;AAAA;AAAA;AAAA;AAAA,YADuB,CAF/B;AAoBH;;AAxC0C;;AA2C/C,MAAMI,eAAe,GAAIjB,KAAD,IAAW;AAC/B,SAAO;AACHO,IAAAA,WAAW,EAAEP,KAAK,CAACO;AADhB,GAAP;AAGH,CAJD;;AAMA,MAAMW,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACLC,IAAAA,WAAW,EAAGC,EAAD,IAAQ;AACnBF,MAAAA,QAAQ,CAACxB,MAAM,CAAC0B,EAAD,CAAP,CAAR;AACD;AAHI,GAAP;AAKD,CANH;;AAQA,MAAMC,WAAW,GAAG5B,OAAO,CACvBuB,eADuB,EAEvBC,kBAFuB,CAAP,CAGlBtB,gBAHkB,CAApB;AAKE,eAAe0B,WAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport {upload} from \"../actions/upload\"\r\n\r\nclass ProgressBarFiles extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n               \r\n        //seteamos el estado inicial \r\n        this.state = {\r\n            showAlertMessage: false,\r\n            alertMessage: \"\",\r\n            showResultMessage: false,\r\n            resultMessageSize: \"\",\r\n            resultMessageOrientation: \"\",\r\n            selectedFiles: 0,\r\n            progressBar: [],\r\n            imagesList: [],\r\n            selectedImages: []\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n    \r\n            (this.state.progressBar && this.state.progressBar.map((progressInfo, index) => (\r\n                <div className=\"mb-2\" key={index}>\r\n                <span>{progressInfo.fileName}</span>\r\n                <div className=\"progress\">\r\n                    <div\r\n                    className=\"progress-bar progress-bar-info\"\r\n                    role=\"progressbar\"\r\n                    aria-valuenow={progressInfo.percentage}\r\n                    aria-valuemin=\"0\"\r\n                    aria-valuemax=\"100\"\r\n                    style={{ width: progressInfo.percentage + \"%\" }}\r\n                    >\r\n                    {progressInfo.percentage}%\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            )))\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        progressBar: state.progressBar\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      onTodoClick: (id) => {\r\n        dispatch(upload(id))\r\n      }\r\n    }\r\n  }\r\n  \r\nconst ProgressBar = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ProgressBarFiles)\r\n  \r\n  export default ProgressBar;"]},"metadata":{},"sourceType":"module"}