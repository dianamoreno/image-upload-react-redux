{"ast":null,"code":"var _jsxFileName = \"C:\\\\Datos\\\\Diana\\\\node-projects\\\\images-upload-resizer-redux\\\\src\\\\components\\\\ImagesList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport UploadService from \"../services/fileUpload\";\nimport { getImages } from \"../actions/imagesList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ImagesList extends React.Component {\n  constructor(props) {\n    super(props); //seteamos el estado inicial \n\n    this.state = {\n      imagesList: []\n    }; //tamaño de hoja A4 (796 x 1123 pixeles)\n\n    this.widthA4 = 796; //horizontal\n\n    this.heightA4 = 1123; //vertical\n\n    this.selectedImages = [];\n  } //metodo que se llama una vez se ha cargado el componente\n  //al setear el estado aqui, cada vez que se modifique se volvera a mostrar en el DOM\n\n\n  componentDidMount() {\n    this.getImagesList();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.props.showAlertMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        children: this.props.alertMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 48\n      }, this) : null, this.props.showResultMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        role: \"alert\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.props.resultMessageSize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.props.resultMessageOrientation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this) : null, this.props.imagesList && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: \"Lista de Imagenes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group list-group-flush\",\n          children: this.props.imagesList.map((img, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: img.url,\n                target: \"_blank\",\n                rel: \"noreferrer\",\n                children: [\"Ver \", img.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Tamaño original (ancho x alto):\" + img.width + \"px X \" + img.height + \"px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: img.url,\n              alt: img.name,\n              height: \"100px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content-detail-info\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-info btn-sm\",\n                onClick: () => this.resizeItem(img.width, img.height),\n                children: \"Redimensionar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    alertMessage: state.uploadImage.alertMessage,\n    showAlertMessage: state.uploadImage.showAlertMessage,\n    showResultMessage: state.uploadImage.showResultMessage,\n    resultMessageSize: state.uploadImage.resultMessageSize,\n    resultMessageOrientation: state.uploadImage.resultMessageOrientation,\n    imagesList: state.uploadImage.imagesList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getImagesList: () => {\n      dispatch(getImages());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImagesList);","map":{"version":3,"sources":["C:/Datos/Diana/node-projects/images-upload-resizer-redux/src/components/ImagesList.js"],"names":["React","connect","UploadService","getImages","ImagesList","Component","constructor","props","state","imagesList","widthA4","heightA4","selectedImages","componentDidMount","getImagesList","render","showAlertMessage","alertMessage","showResultMessage","resultMessageSize","resultMessageOrientation","map","img","index","url","name","width","height","resizeItem","mapStateToProps","uploadImage","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport UploadService from \"../services/fileUpload\";\r\nimport {getImages} from \"../actions/imagesList\"\r\n\r\nclass ImagesList extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n                \r\n        //seteamos el estado inicial \r\n        this.state = {\r\n            imagesList: []\r\n        };\r\n        //tamaño de hoja A4 (796 x 1123 pixeles)\r\n        this.widthA4 = 796; //horizontal\r\n        this.heightA4 = 1123; //vertical\r\n\r\n        this.selectedImages = [];\r\n\r\n    }\r\n\r\n    //metodo que se llama una vez se ha cargado el componente\r\n    //al setear el estado aqui, cada vez que se modifique se volvera a mostrar en el DOM\r\n    componentDidMount() {\r\n\r\n        this.getImagesList()\r\n    }\r\n    \r\n    render (){\r\n        \r\n        return (\r\n            <div>\r\n                {this.props.showAlertMessage ? <div className=\"alert alert-danger\" role=\"alert\">{this.props.alertMessage}</div> : null}\r\n\r\n                {this.props.showResultMessage ?  \r\n\r\n                    <div className=\"alert alert-success\" role=\"alert\">\r\n                        <p>{this.props.resultMessageSize}</p>\r\n                        <p>{this.props.resultMessageOrientation}</p>\r\n                    </div> : null\r\n                }\r\n\r\n                { this.props.imagesList &&(\r\n                <div className=\"card mt-3\">\r\n                    <div className=\"card-header\">Lista de Imagenes</div>\r\n                    <ul className=\"list-group list-group-flush\">\r\n                    \r\n                            {this.props.imagesList.map((img, index) => (\r\n                        \r\n                                <li className=\"list-group-item\" key={index}>\r\n                                <p><a href={img.url} target=\"_blank\" rel=\"noreferrer\">Ver {img.name}</a></p>\r\n                                <p>{\"Tamaño original (ancho x alto):\"+img.width+\"px X \"+img.height+\"px\"}</p>\r\n                                <img src={img.url} alt={img.name} height=\"100px\"  />\r\n                                <div className=\"content-detail-info\"> \r\n                                    <button className=\"btn btn-info btn-sm\"\r\n                                    onClick={()=>this.resizeItem(img.width, img.height)}>Redimensionar</button> \r\n                                    </div> \r\n                                \r\n                                </li>\r\n                            ))}\r\n                        \r\n            \r\n                    </ul>\r\n                </div>\r\n                )}\r\n\r\n            </div>\r\n        )\r\n    }   \r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        alertMessage: state.uploadImage.alertMessage,\r\n        showAlertMessage: state.uploadImage.showAlertMessage,\r\n        showResultMessage: state.uploadImage.showResultMessage,\r\n        resultMessageSize: state.uploadImage.resultMessageSize,\r\n        resultMessageOrientation: state.uploadImage.resultMessageOrientation,\r\n        imagesList: state.uploadImage.imagesList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      getImagesList: () => {\r\n        dispatch(getImages())\r\n      }\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ImagesList);"]},"metadata":{},"sourceType":"module"}