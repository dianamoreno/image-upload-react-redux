{"ast":null,"code":"var _jsxFileName = \"C:\\\\Datos\\\\Diana\\\\node-projects\\\\images-upload-resizer-redux\\\\src\\\\components\\\\ProgressBar.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { upload } from \"../actions/upload\";\n/*\r\nclass ProgressBarFiles extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n               \r\n        //seteamos el estado inicial \r\n        this.state = {\r\n            showAlertMessage: false,\r\n            alertMessage: \"\",\r\n            showResultMessage: false,\r\n            resultMessageSize: \"\",\r\n            resultMessageOrientation: \"\",\r\n            selectedFiles: 0,\r\n            progressBar: [],\r\n            imagesList: [],\r\n            selectedImages: []\r\n        };\r\n    }\r\n\r\n    render() {\r\n        console.log(\"entra a render alertMessage=\"+this.props.alertMessage)\r\n\r\n        return (\r\n    \r\n            (this.state.progressBar && this.state.progressBar.map((progressInfo, index) => (\r\n                <div className=\"mb-2\" key={index}>\r\n                <span>{progressInfo.fileName}</span>\r\n                <div className=\"progress\">\r\n                    <div\r\n                    className=\"progress-bar progress-bar-info\"\r\n                    role=\"progressbar\"\r\n                    aria-valuenow={progressInfo.percentage}\r\n                    aria-valuemin=\"0\"\r\n                    aria-valuemax=\"100\"\r\n                    style={{ width: progressInfo.percentage + \"%\" }}\r\n                    >\r\n                    {progressInfo.percentage}%\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            )))\r\n        )\r\n    }\r\n}\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProgressBarFiles = ({\n  todos,\n  onTodoClick\n}) => /*#__PURE__*/_jsxDEV(\"ul\", {\n  children: todos.map(todo => /*#__PURE__*/_jsxDEV(Todo, { ...todo,\n    onClick: () => onTodoClick(todo.id)\n  }, todo.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 52,\n  columnNumber: 5\n}, this);\n\n_c = ProgressBarFiles;\n\nconst mapStateToProps = state => {\n  console.log(\"mapStateToProps\");\n  console.log(state);\n  return {\n    alertMessage: state.alertMessage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTodoClick: id => {\n      dispatch(upload(id));\n    }\n  };\n};\n\nconst ProgressBar = connect(mapStateToProps, mapDispatchToProps)(ProgressBarFiles);\nexport default ProgressBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressBarFiles\");","map":{"version":3,"sources":["C:/Datos/Diana/node-projects/images-upload-resizer-redux/src/components/ProgressBar.js"],"names":["React","connect","upload","ProgressBarFiles","todos","onTodoClick","map","todo","id","mapStateToProps","state","console","log","alertMessage","mapDispatchToProps","dispatch","ProgressBar"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,MAAR,QAAqB,mBAArB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,kBACrB;AAAA,YACGD,KAAK,CAACE,GAAN,CAAUC,IAAI,iBACb,QAAC,IAAD,OAEMA,IAFN;AAGE,IAAA,OAAO,EAAE,MAAMF,WAAW,CAACE,IAAI,CAACC,EAAN;AAH5B,KACOD,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA,UADD;AADH;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAML,gB;;AAYN,MAAMM,eAAe,GAAIC,KAAD,IAAW;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO;AACHG,IAAAA,YAAY,EAAGH,KAAK,CAACG;AADlB,GAAP;AAGH,CAND;;AAQA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AAErC,SAAO;AACLV,IAAAA,WAAW,EAAGG,EAAD,IAAQ;AACnBO,MAAAA,QAAQ,CAACb,MAAM,CAACM,EAAD,CAAP,CAAR;AACD;AAHI,GAAP;AAKD,CAPH;;AASA,MAAMQ,WAAW,GAAGf,OAAO,CACvBQ,eADuB,EAEvBK,kBAFuB,CAAP,CAGlBX,gBAHkB,CAApB;AAKE,eAAea,WAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport {upload} from \"../actions/upload\"\r\n/*\r\nclass ProgressBarFiles extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n               \r\n        //seteamos el estado inicial \r\n        this.state = {\r\n            showAlertMessage: false,\r\n            alertMessage: \"\",\r\n            showResultMessage: false,\r\n            resultMessageSize: \"\",\r\n            resultMessageOrientation: \"\",\r\n            selectedFiles: 0,\r\n            progressBar: [],\r\n            imagesList: [],\r\n            selectedImages: []\r\n        };\r\n    }\r\n\r\n    render() {\r\n        console.log(\"entra a render alertMessage=\"+this.props.alertMessage)\r\n\r\n        return (\r\n    \r\n            (this.state.progressBar && this.state.progressBar.map((progressInfo, index) => (\r\n                <div className=\"mb-2\" key={index}>\r\n                <span>{progressInfo.fileName}</span>\r\n                <div className=\"progress\">\r\n                    <div\r\n                    className=\"progress-bar progress-bar-info\"\r\n                    role=\"progressbar\"\r\n                    aria-valuenow={progressInfo.percentage}\r\n                    aria-valuemin=\"0\"\r\n                    aria-valuemax=\"100\"\r\n                    style={{ width: progressInfo.percentage + \"%\" }}\r\n                    >\r\n                    {progressInfo.percentage}%\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            )))\r\n        )\r\n    }\r\n}\r\n*/\r\n\r\nconst ProgressBarFiles = ({ todos, onTodoClick }) => (\r\n    <ul>\r\n      {todos.map(todo =>\r\n        <Todo\r\n          key={todo.id}\r\n          {...todo}\r\n          onClick={() => onTodoClick(todo.id)}\r\n        />\r\n      )}\r\n    </ul>\r\n  )\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(\"mapStateToProps\")\r\n    console.log(state)\r\n    return {\r\n        alertMessage : state.alertMessage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n      onTodoClick: (id) => {\r\n        dispatch(upload(id))\r\n      }\r\n    }\r\n  }\r\n  \r\nconst ProgressBar = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ProgressBarFiles)\r\n  \r\n  export default ProgressBar;"]},"metadata":{},"sourceType":"module"}